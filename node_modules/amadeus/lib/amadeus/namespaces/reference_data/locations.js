'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _airports = require('./locations/airports');

var _airports2 = _interopRequireDefault(_airports);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * A namespaced client for the
 * `/v2/reference-data/locations` endpoints
 *
 * Access via the {@link Amadeus} object
 *
 * ```js
 * let amadeus = new Amadeus();
 * amadeus.referenceData.locations;
 * ```
 *
 * @param {Client} client
 * @property {Airports} airports
 */
var Locations = function () {
  function Locations(client) {
    _classCallCheck(this, Locations);

    this.client = client;
    this.airports = new _airports2.default(client);
  }

  /**
   * Returns a list of airports and cities matching a given keyword.
   *
   * @param {Object} params
   * @param {string} params.keyword keyword that should represent the start of
   *   a word in a city or airport name or code
   * @param {string} params.subType the type of location to search for
   * @return {Promise.<Response,ResponseError>} a Promise
   *
   * Find any location starting with 'lon'
   *
   * ```js
   * amadeus.referenceData.location.get({
   *   keyword: 'lon',
   *   subType: Amadeus.location.any
   * });
   * ```
   */


  _createClass(Locations, [{
    key: 'get',
    value: function get() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      return this.client.get('/v1/reference-data/locations', params);
    }
  }]);

  return Locations;
}();

exports.default = Locations;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hbWFkZXVzL25hbWVzcGFjZXMvcmVmZXJlbmNlX2RhdGEvbG9jYXRpb25zLmpzIl0sIm5hbWVzIjpbIkxvY2F0aW9ucyIsImNsaWVudCIsImFpcnBvcnRzIiwiQWlycG9ydHMiLCJwYXJhbXMiLCJnZXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7O0FBRUE7Ozs7Ozs7Ozs7Ozs7O0lBY01BLFM7QUFDSixxQkFBWUMsTUFBWixFQUFvQjtBQUFBOztBQUNsQixTQUFLQSxNQUFMLEdBQWNBLE1BQWQ7QUFDQSxTQUFLQyxRQUFMLEdBQWdCLElBQUlDLGtCQUFKLENBQWFGLE1BQWIsQ0FBaEI7QUFDRDs7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFrQmlCO0FBQUEsVUFBYkcsTUFBYSx1RUFBSixFQUFJOztBQUNmLGFBQU8sS0FBS0gsTUFBTCxDQUFZSSxHQUFaLENBQWdCLDhCQUFoQixFQUFnREQsTUFBaEQsQ0FBUDtBQUNEOzs7Ozs7a0JBR1lKLFMiLCJmaWxlIjoibG9jYXRpb25zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFpcnBvcnRzIGZyb20gJy4vbG9jYXRpb25zL2FpcnBvcnRzJztcblxuLyoqXG4gKiBBIG5hbWVzcGFjZWQgY2xpZW50IGZvciB0aGVcbiAqIGAvdjIvcmVmZXJlbmNlLWRhdGEvbG9jYXRpb25zYCBlbmRwb2ludHNcbiAqXG4gKiBBY2Nlc3MgdmlhIHRoZSB7QGxpbmsgQW1hZGV1c30gb2JqZWN0XG4gKlxuICogYGBganNcbiAqIGxldCBhbWFkZXVzID0gbmV3IEFtYWRldXMoKTtcbiAqIGFtYWRldXMucmVmZXJlbmNlRGF0YS5sb2NhdGlvbnM7XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge0NsaWVudH0gY2xpZW50XG4gKiBAcHJvcGVydHkge0FpcnBvcnRzfSBhaXJwb3J0c1xuICovXG5jbGFzcyBMb2NhdGlvbnMge1xuICBjb25zdHJ1Y3RvcihjbGllbnQpIHtcbiAgICB0aGlzLmNsaWVudCA9IGNsaWVudDtcbiAgICB0aGlzLmFpcnBvcnRzID0gbmV3IEFpcnBvcnRzKGNsaWVudCk7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhIGxpc3Qgb2YgYWlycG9ydHMgYW5kIGNpdGllcyBtYXRjaGluZyBhIGdpdmVuIGtleXdvcmQuXG4gICAqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXNcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5rZXl3b3JkIGtleXdvcmQgdGhhdCBzaG91bGQgcmVwcmVzZW50IHRoZSBzdGFydCBvZlxuICAgKiAgIGEgd29yZCBpbiBhIGNpdHkgb3IgYWlycG9ydCBuYW1lIG9yIGNvZGVcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5zdWJUeXBlIHRoZSB0eXBlIG9mIGxvY2F0aW9uIHRvIHNlYXJjaCBmb3JcbiAgICogQHJldHVybiB7UHJvbWlzZS48UmVzcG9uc2UsUmVzcG9uc2VFcnJvcj59IGEgUHJvbWlzZVxuICAgKlxuICAgKiBGaW5kIGFueSBsb2NhdGlvbiBzdGFydGluZyB3aXRoICdsb24nXG4gICAqXG4gICAqIGBgYGpzXG4gICAqIGFtYWRldXMucmVmZXJlbmNlRGF0YS5sb2NhdGlvbi5nZXQoe1xuICAgKiAgIGtleXdvcmQ6ICdsb24nLFxuICAgKiAgIHN1YlR5cGU6IEFtYWRldXMubG9jYXRpb24uYW55XG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICovXG4gIGdldChwYXJhbXMgPSB7fSkge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5nZXQoJy92MS9yZWZlcmVuY2UtZGF0YS9sb2NhdGlvbnMnLCBwYXJhbXMpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IExvY2F0aW9ucztcbiJdfQ==